class Solution {
public:
    int freq[(int)1e4+4];
    int memo[(int)2e4+5];
    int clc(int k,vector<int> &nums){
        if(k>=nums.size() || k==-1){
            return 0;
        }
        if(memo[k]!=-1){
            return memo[k];
        }
        int next_index = -1;
        for(int i=k;i<nums.size();i++){
            if(nums[i]>nums[k]+1){
                next_index = i;
                break;
            }
        }
        int a1 = 0;
        int a2 = 0;
        a1 = nums[k]*freq[nums[k]]+clc(next_index,nums);
        a2 = clc(k+1,nums);
        memo[k] = max(a1,a2);
        return max(a1,a2);
       
    }
    
    int deleteAndEarn(vector<int>& nums) {
        memset(memo,-1,sizeof(memo));
        memset(freq,0,sizeof(freq));
        sort(nums.begin(),nums.end());
        for(auto i:nums){
            freq[i]++;
        }
        return clc(0,nums);
    }
    
};
